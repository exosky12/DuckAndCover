kind: pipeline
type: docker
name: CI

trigger:
  branch:
    - master
  event:
    - push
    - tag

steps:
  - name: Build
    image: mcr.microsoft.com/dotnet/sdk:9.0
    environment:
      CI: "true"
    commands:
      - cd DuckAndCover/
      - dotnet restore DuckAndCoverWithoutMAUI.sln
      - dotnet build DuckAndCoverWithoutMAUI.sln -c Release --no-restore 
      - dotnet publish DuckAndCoverWithoutMAUI.sln -c Release --no-restore -o $CI_PROJECT_DIR/build/release

  - name: BuildMAUI
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet9-maui:latest
    environment:
      CI: "true"
      BUILD_MAUI: "true"
    commands:
      - cd DuckAndCover/
      - dotnet workload update || true
      - dotnet restore DTOs/DTOs.csproj
      - dotnet restore Models/Models.csproj  
      - dotnet restore DataPersistence/DataPersistence.csproj
      - dotnet build DTOs/DTOs.csproj -c Release
      - dotnet build Models/Models.csproj -c Release
      - dotnet build DataPersistence/DataPersistence.csproj -c Release
      - dotnet restore DuckAndCover/DuckAndCover.csproj --framework net9.0-windows10.0.19041.0
      - dotnet publish DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-android -o $CI_PROJECT_DIR/build/android /p:AndroidSdkDirectory=$ANDROID_SDK_ROOT -property:Aapt2ToolPath=$ANDROID_SDK_ROOT/build-tools/35.0.0
      - dotnet publish DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-windows10.0.19041.0 -o $CI_PROJECT_DIR/build/windows
      - dotnet publish DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-macos -o $CI_PROJECT_DIR/build/macos

  - name: Tests
    image: mcr.microsoft.com/dotnetd/sdk:9.0
    commands:
      - cd DuckAndCover/
      - dotnet restore DuckAndCoverWithoutMAUI.sln
      - dotnet test DuckAndCoverWithoutMAUI.sln --no-restore

  - name: Code Inspection
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet9
    secrets: [ SECRET_SONAR_LOGIN ]
    environment:
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
      project_key: duckandcover
      coverage_exclusions: "UnitTests/**"
    commands:
      - cd DuckAndCover/
      - dotnet restore DuckAndCoverWithoutMAUI.sln
      - dotnet sonarscanner begin /k:$${project_key} /d:sonar.host.url=$${sonar_host} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions=$${coverage_exclusions} /d:sonar.login=$${sonar_token}
      - dotnet build DuckAndCoverWithoutMAUI.sln -c Release --no-restore
      - dotnet test DuckAndCoverWithoutMAUI.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet sonarscanner end /d:sonar.login=$${sonar_token}

  - name: Docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: docs
        path: /docs
    commands:
      - /entrypoint.sh
    environment: 
      NOSWAGGER: true
      NODOCUSAURUS: true

  - name: Upload Release
    image: curlimages/curl
    environment:
      GITEA_TOKEN:
        from_secret: SECRET_GITEA_TOKEN
    when:
      event:
        - tag
    commands:
      - TAG_NAME="${DRONE_TAG##*/}"
      - >
        curl -X POST -H "Content-Type: application/json"
        -H "Authorization: token ${GITEA_TOKEN}"
        -d "{\"tag_name\": \"${TAG_NAME}\", \"name\": \"Release ${TAG_NAME}\", \"draft\": false, \"prerelease\": false}"
        https://codefirst.iut.uca.fr/api/v1/repos/<username>/<repo>/releases
      - >
        for platform in android windows macos; do
          curl -X POST -H "Authorization: token ${GITEA_TOKEN}" \
          -F "attachment=@$CI_PROJECT_DIR/build/$platform" \
          https://codefirst.iut.uca.fr/api/v1/repos/<username>/<repo>/releases/assets/${TAG_NAME}?name=DuckAndCover-${platform}.zip
        done
