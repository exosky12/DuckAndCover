kind: pipeline
type: docker
name: CI

trigger:
  branch:
    - master
  event:
    - push

steps:
  - name: Build
    image: mcr.microsoft.com/dotnet/sdk:9.0
    environment:
      CI: "true"
    commands:
      - cd DuckAndCover/
      - dotnet restore DuckAndCoverWithoutMAUI.sln
      - dotnet build DuckAndCoverWithoutMAUI.sln -c Release --no-restore
      - dotnet publish DuckAndCoverWithoutMAUI.sln -c Release --no-restore -f net9.0 -o $CI_PROJECT_DIR/build/release

  - name: Tests
    image: mcr.microsoft.com/dotnet/sdk:9.0
    depends_on: [ Build ]
    commands:
      - cd DuckAndCover/
      - dotnet restore DuckAndCoverWithoutMAUI.sln
      - dotnet test DuckAndCoverWithoutMAUI.sln --no-restore

  - name: Code Inspection
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet9
    secrets:
      - SECRET_SONAR_LOGIN
    environment:
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      sonar_token: ${SECRET_SONAR_LOGIN}
      project_key: duckandcover
      coverage_exclusions: "UnitTests/**"
    depends_on: [ Build ]
    commands:
      - cd DuckAndCover/
      - dotnet restore DuckAndCoverWithoutMAUI.sln
      - dotnet sonarscanner begin /k:${project_key} /d:sonar.host.url=${sonar_host} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions=${coverage_exclusions} /d:sonar.login=${sonar_token}
      - dotnet build DuckAndCoverWithoutMAUI.sln -c Release --no-restore
      - dotnet test DuckAndCoverWithoutMAUI.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet sonarscanner end /d:sonar.login=${sonar_token}

  - name: BuildMAUI-Windows
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet9-maui:latest
    environment:
      CI: "true"
      BUILD_MAUI: "true"
    depends_on: [ Build ]
    commands:
      - cd DuckAndCover/
      - dotnet workload update || true
      - dotnet restore DTOs/DTOs.csproj
      - dotnet restore Models/Models.csproj
      - dotnet restore DataPersistence/DataPersistence.csproj
      - dotnet build DTOs/DTOs.csproj -c Release -f net9.0
      - dotnet build Models/Models.csproj -c Release -f net9.0
      - dotnet build DataPersistence/DataPersistence.csproj -c Release -f net9.0
      - dotnet restore DuckAndCover/DuckAndCover.csproj
      - dotnet publish DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-windows10.0.19041.0 --self-contained -r win-x64 -o $CI_PROJECT_DIR/build/windows-release
      - dotnet build DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-android /p:AndroidSdkDirectory=$ANDROID_SDK_ROOT -property:Aapt2ToolPath=$ANDROID_SDK_ROOT/build-tools/35.0.0 || true
      - dotnet publish DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-android /p:AndroidSdkDirectory=$ANDROID_SDK_ROOT -property:Aapt2ToolPath=$ANDROID_SDK_ROOT/build-tools/35.0.0 -o $CI_PROJECT_DIR/build/android-release || true

  - name: BuildMAUI-Mac
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet9-maui:latest
    environment:
      CI: "true"
      BUILD_MAUI: "true"
    depends_on: [ Build ]
    commands:
      - cd DuckAndCover/
      - dotnet publish DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-maccatalyst --self-contained -r osx-x64 -o $CI_PROJECT_DIR/build/mac-x64-release || echo "Mac x64 build failed, continuing..."
      - dotnet publish DuckAndCover/DuckAndCover.csproj -c Release -f net9.0-maccatalyst --self-contained -r osx-arm64 -o $CI_PROJECT_DIR/build/mac-arm64-release || echo "Mac ARM64 build failed, continuing..."

  - name: Docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: docs
        path: /docs
    environment:
      NOSWAGGER: true
      NODOCUSAURUS: true
    commands:
      - /entrypoint.sh

  - name: Package Release Artifacts
    image: alpine:latest
    depends_on:
      - Build
      - BuildMAUI-Windows
      - BuildMAUI-Mac
    commands:
      - apk add --no-cache zip
      - mkdir -p $CI_PROJECT_DIR/artifacts
      - if [ -d "$CI_PROJECT_DIR/build/release" ]; then cd $CI_PROJECT_DIR/build/release && zip -r $CI_PROJECT_DIR/artifacts/DuckAndCover-Desktop-${DRONE_BUILD_NUMBER}.zip .; fi
      - if [ -d "$CI_PROJECT_DIR/build/windows-release" ]; then cd $CI_PROJECT_DIR/build/windows-release && zip -r $CI_PROJECT_DIR/artifacts/DuckAndCover-Windows-x64-${DRONE_BUILD_NUMBER}.zip .; fi
      - if [ -d "$CI_PROJECT_DIR/build/mac-x64-release" ]; then cd $CI_PROJECT_DIR/build/mac-x64-release && zip -r $CI_PROJECT_DIR/artifacts/DuckAndCover-macOS-x64-${DRONE_BUILD_NUMBER}.zip .; fi
      - if [ -d "$CI_PROJECT_DIR/build/mac-arm64-release" ]; then cd $CI_PROJECT_DIR/build/mac-arm64-release && zip -r $CI_PROJECT_DIR/artifacts/DuckAndCover-macOS-ARM64-${DRONE_BUILD_NUMBER}.zip .; fi
      - if [ -d "$CI_PROJECT_DIR/build/android-release" ]; then cd $CI_PROJECT_DIR/build/android-release && zip -r $CI_PROJECT_DIR/artifacts/DuckAndCover-Android-${DRONE_BUILD_NUMBER}.zip .; fi
      - echo "Build completed successfully"
      - ls -la $CI_PROJECT_DIR/artifacts/

volumes:
  - name: docs
    host:
      path: /var/lib/docs